-- Ahlam Hassen 103031281
-- Ben Gardiner 102151272

--create databsse DW1272
use DW1272

--errorevent table


DROP TABLE if exists ERROREVENT; 

GO

CREATE TABLE ERROREVENT (
ERRORID INTEGER,
SOURCE_ID NVARCHAR(50),
SOURCE_TABLE NVARCHAR(50),
FILTERID INTEGER,
DATETIME DATETIME,
ACTION NVARCHAR(50),
CONSTRAINT ERROREVENTACTION CHECK (ACTION IN ('SKIP','MODIFY'))
);

GO

DROP SEQUENCE IF EXISTS ERRORID_SEQ

GO

CREATE SEQUENCE ERRORID_SEQ
START WITH 1
INCREMENT BY 1;


-- DWDATE



GO

drop table IF EXISTS [DWSALE];
drop table IF EXISTS [DWPROD];
drop table IF EXISTS [DWCUST];

GO

 CREATE TABLE [dbo].[DWPROD] (
    [DWPRODID]         INT IDENTITY(1,1) NOT NULL,
	[DWSOURCETABLE]    NVARCHAR (100)    NOT NULL,
	[DWSOURCEID]       INT				 NOT NULL,
    PRODNAME           NVARCHAR (100)	 NULL,
    PRODCATNAME        NVARCHAR (100)	 NULL,
    PRODMANUNAME       NVARCHAR (30)	 NULL,
    PRODSHIPNAME	   NVARCHAR (30)	 NULL,
	CONSTRAINT [Pk_dwprodid] PRIMARY KEY CLUSTERED ([DWPRODID] ASC),
	
);
--(5001, 'PRODUCT', '10732', 'NAVEL BOOK PRO', 3, 'Samdanced', 'EXPRESS OVERNIGHT')


GO

 CREATE TABLE [dbo].[DWCUST] (
    [DWCUSTID]        INT IDENTITY(1,1) NOT NULL,
	[DWSOURCEIDBRIS]   INT			NULL, 
	[DWSOURCEIDMELB]   INT			NULL, 
    [FIRSTNAME]       NVARCHAR (30) NULL,
    [SURNAME]         NVARCHAR (30) NULL,
    [GENDER]          NVARCHAR (10) NULL,
    [PHONE]           NVARCHAR (20) NULL,
    [POSTCODE]		  INT			NULL,
    [CITY]			  NVARCHAR (50) NULL,
    [STATE]           NVARCHAR (10) NULL,
    [CUSTCATNAME]     NVARCHAR (30) NULL,
   CONSTRAINT [Pk_dwCust] PRIMARY KEY CLUSTERED ([DWCUSTID] ASC),
);

--(4001, 639, NULL, 'Ngan', 'Noah', 'F', 9173601430, 7773, 'Parramatta', 'NSW', 'GENERAL')



CREATE TABLE [dbo].[DWSALE] (
	[DWSALEID]		INT IDENTITY(1,1) NOT NULL,
	[DWCUSTID]		INT			    NOT NULL,
	[DWPRODID]		INT				NOT NULL,
	DWSOURCEIDBRIS	INT				NULL,
	DWSOURCEIDMELB	INT				NULL,
	QTY				INT				NULL,
	SALE_DWDATEID	INT				NULL,
	SHIP_DWDATEID	INT				NULL, 
	SALEPRICE		DECIMAL (7, 2)	NULL,
	CONSTRAINT [PK_dwSaleId] PRIMARY KEY CLUSTERED ([DWSALEID] ASC),
	CONSTRAINT [FK_dwCustId] foreign KEY([DWCUSTID]) references [DWCUST],
	CONSTRAINT [FK_dwProdId] foreign KEY([DWPRODID]) references [DWPROD],
	CONSTRAINT [FK_dwSaleDateId] foreign KEY(SALE_DWDATEID) references DWDATE(DateKey),
	CONSTRAINT [FK_dwShipDateId] foreign KEY(SHIP_DWDATEID) references DWDATE(DateKey),
);

--(2001, 4001, 5001, 639, NULL, 5, 1091, 1091, 1210.10)

GO

DROP TABLE IF EXISTS GENDERSPELLING;

GO

CREATE TABLE GENDERSPELLING (

INVALID_VALUE VARCHAR(30),

NEW_VALUE VARCHAR(1) CHECK(NEW_VALUE IN('F', 'M')),

PRIMARY KEY(INVALID_VALUE)

);

GO


INSERT INTO GENDERSPELLING(INVALID_VALUE, NEW_VALUE) VALUES
('MAIL', 'M'),
('WOMAN', 'F'),
('FEM', 'F'),
('FEMALE', 'F'),
('MALE', 'M'),
('GENTELMAN', 'M'),
('MM', 'M'), 
('FF', 'F'),
('FEMAIL', 'F');

GO

-- TASK 2.1
-- PRODUCT TRANSFER FILTER #1
INSERT INTO ERROREVENT(ERRORID, SOURCE_ID, SOURCE_TABLE, FILTERID, [DATETIME], [ACTION])
SELECT NEXT VALUE FOR ERRORID_SEQ, CONVERT(nvarchar(50), prodid), 'PRODUCT', 1, (SELECT SYSDATETIME()), 'SKIP'
from TPS.dbo.Product
WHERE product.prodname is null


-- TASK 2.2
-- filter #2
INSERT INTO ERROREVENT(ERRORID, SOURCE_ID, SOURCE_TABLE, FILTERID, [DATETIME], [ACTION])
SELECT NEXT VALUE FOR ERRORID_SEQ, CONVERT(nvarchar(50), prodid), 'PRODUCT', 2, (SELECT SYSDATETIME()), 'MODIFY'
from TPS.dbo.PRODUCT
WHERE PRODUCT.MANUFACTURERCODE is NULL;

--SELECT * FROM ERROREVENT;
--SELECT * FROM TPS.dbo.PRODUCT
--WHERE MANUFACTURERCODE IS NULL;


-- TASK 2.3
-- filter #3
INSERT INTO ERROREVENT(ERRORID, SOURCE_ID, SOURCE_TABLE, FILTERID, [DATETIME], [ACTION])
SELECT NEXT VALUE FOR ERRORID_SEQ, CONVERT(NVARCHAR(50), Prodid), 'PRODUCT', 3, (SELECT SYSDATETIME()), 'MODIFY'
FROM TPS.dbo.PRODUCT 
WHERE Prodcategory IS NULL OR Prodcategory NOT IN (SELECT Productcategory FROM TPS.dbo.PRODCATEGORY);

-- SELECT * FROM ERROREVENT WHERE FILTERID = 3;
-- SELECT * FROM TPS.dbo.PRODUCT 
-- WHERE Prodcategory IS NULL OR Prodcategory NOT IN (SELECT Productcategory FROM TPS.dbo.PRODCATEGORY);

--/

go

--CREATE VIEW PRODUCT_DETAIL_JOIN AS
--SELECT C.*, PC.CATEGORYNAME, M.Manuname, S.DESCRIPTION
--FROM DW1272.dbo.CLEAN_PRODUCT C 
--LEFT JOIN TPS.dbo.SHIPPING S
--ON C.Shippingcode = S.Shippingcode
--LEFT JOIN TPS.dbo.MANUFACTURER M
--ON C.Manufacturercode = M.Manucode
--LEFT JOIN TPS.dbo.Prodcategory PC
--ON C.Prodcategory = PC.Productcategory;

--CREATE VIEW ERROREVEN_#2_JOIN AS
--SELECT C.*, PC.CATEGORYNAME, M.Manuname, S.DESCRIPTION
--FROM (SELECT * FROM TPS.dbo.PRODUCT 
--WHERE Manufacturercode IS NULL) C 
--LEFT JOIN TPS.dbo.SHIPPING S
--ON C.Shippingcode = S.Shippingcode
--LEFT JOIN TPS.dbo.MANUFACTURER M
--ON C.Manufacturercode = M.Manucode
--LEFT JOIN TPS.dbo.Prodcategory PC
--ON C.Prodcategory = PC.Productcategory;

 --CREATE VIEW ERROREVEN_#3_JOIN AS
 --SELECT C.*, PC.CATEGORYNAME, M.Manuname, S.DESCRIPTION
 --FROM (SELECT * FROM TPS.dbo.PRODUCT 
 --WHERE Prodid IN (SELECT SOURCE_ID FROM DW1272.dbo.ERROREVENT WHERE FILTERID = 3)) C 
 --LEFT JOIN TPS.dbo.SHIPPING S
 --ON C.Shippingcode = S.Shippingcode
 --LEFT JOIN TPS.dbo.MANUFACTURER M
 --ON C.Manufacturercode = M.Manucode
 --LEFT JOIN TPS.dbo.Prodcategory PC
 --ON C.Prodcategory = PC.Productcategory;

--CREATE VIEW CLEAN_CUSTBRIS AS
--SELECT * FROM TPS.dbo.CUSTBRIS 
--WHERE Custid NOT IN (SELECT CONVERT(INT, SOURCE_ID) FROM DW1272.dbo.ERROREVENT);

 --CREATE VIEW CUSTBRIS_JOIN AS
 --SELECT CBR.*, CC.CUSTCATNAME 
 --FROM DW1271.dbo.CLEAN_CUSTBRIS CBR
 --LEFT JOIN TPS.dbo.CUSTCATEGORY CC
 --ON CBR.Custcatcode = CC.Custcatcode;

--CREATE VIEW FILTER_#4 AS
--SELECT * FROM TPS.dbo.CUSTBRIS 
--WHERE Custid IN (SELECT CONVERT(INT, SOURCE_ID) FROM DW1272.dbo.ERROREVENT WHERE FILTERID = 4);



-- Task 2.4.3 (a)

INSERT INTO DWPROD(DWSOURCETABLE, DWSOURCEID, PRODNAME, PRODCATNAME, PRODMANUNAME, PRODSHIPNAME)
SELECT 'PRODUCT', CONVERT(NVARCHAR(50), Prodid), Prodname, CATEGORYNAME, Manuname, [DESCRIPTION] FROM PRODUCT_DETAIL_JOIN;

-- SELECT * FROM DWPROD;

--/

--Task 2.4.4 (b)

INSERT INTO DWPROD(DWSOURCETABLE, DWSOURCEID, PRODNAME, PRODCATNAME, PRODMANUNAME, PRODSHIPNAME)
SELECT 'PRODUCT', CONVERT(NVARCHAR(50), Prodid), Prodname, CATEGORYNAME, 'UNKNOWN', [DESCRIPTION] FROM ERROREVEN_#2_JOIN;

-- SELECT * FROM DWPROD WHERE PRODMANUNAME = 'UNKNOWN';

--/

-- Task 2.4.5 (C)

INSERT INTO DWPROD(DWSOURCETABLE, DWSOURCEID, PRODNAME, PRODCATNAME, PRODMANUNAME, PRODSHIPNAME)
SELECT 'PRODUCT', CONVERT(NVARCHAR(50), Prodid), Prodname, 'UNKNOWN', Manuname, [DESCRIPTION] FROM ERROREVEN_#3_JOIN;

-- SELECT * FROM DWPROD WHERE PRODCATNAME = 'UNKNOWN';

--/

-- Task 3.1
-- Filter #4 

-- **********I have added the IS NULL check althought it is not asked in 
-- the question as there is a row with null custcat value *************

--delete from ERROREVENT
--Where FILTERID = 4;

INSERT INTO ERROREVENT(ERRORID, SOURCE_ID, SOURCE_TABLE, FILTERID, [DATETIME], [ACTION])
SELECT NEXT VALUE FOR ERRORID_SEQ, CONVERT(NVARCHAR(50), Custid), 'CUSTBRIS', 4, (SELECT SYSDATETIME()), 'MODIFY'
FROM TPS.dbo.CUSTBRIS 
WHERE Custcatcode IS NULL OR Custcatcode NOT IN (SELECT Custcatcode FROM TPS.dbo.CUSTCATEGORY);

 --SELECT * FROM ERROREVENT WHERE FILTERID = 4;
-- SELECT * FROM TPS.dbo.CUSTBRIS 
-- WHERE Custcatcode IS NULL OR Custcatcode NOT IN (SELECT Custcatcode FROM TPS.dbo.CUSTCATEGORY);

--/

-- Task 3.2
-- Filter #5 

INSERT INTO ERROREVENT(ERRORID, SOURCE_ID, SOURCE_TABLE, FILTERID, [DATETIME], [ACTION])
SELECT NEXT VALUE FOR ERRORID_SEQ, CONVERT(NVARCHAR(50), Custid), 'CUSTBRIS', 5, (SELECT SYSDATETIME()), 'MODIFY'
FROM TPS.dbo.CUSTBRIS
WHERE Phone LIKE '% %' OR Phone LIKE '%-%';

 --SELECT * FROM ERROREVENT WHERE FILTERID = 5;
 --SELECT * FROM TPS.dbo.CUSTBRIS 
 --WHERE Phone LIKE '% %' OR Phone LIKE '%-%';

--/

-- Task 3.3
-- Filter #6 
 
INSERT INTO ERROREVENT(ERRORID, SOURCE_ID, SOURCE_TABLE, FILTERID, [DATETIME], [ACTION])
SELECT NEXT VALUE FOR ERRORID_SEQ, CONVERT(NVARCHAR(50), Custid), 'CUSTBRIS', 6, (SELECT SYSDATETIME()), 'SKIP'
FROM TPS.dbo.CUSTBRIS
WHERE Phone NOT IN (SELECT Phone FROM TPS.dbo.CUSTBRIS WHERE Phone LIKE '% %' OR Phone LIKE '%-%') AND
LEN(Phone) != 10;

-- SELECT * FROM ERROREVENT WHERE FILTERID = 6;
-- SELECT * FROM TPS.dbo.CUSTBRIS 
-- WHERE Phone NOT IN (SELECT Phone FROM TPS.dbo.CUSTBRIS WHERE Phone LIKE '% %' OR Phone LIKE '%-%') AND
-- LEN(Phone) != 10;

--/

-- Task 3.4
-- Filter #7 

-- ************** IT DID NOT SPECIFY WHERE GENDER IS NULL I ADED THAT MY SELF ASK TIM ****************

INSERT INTO ERROREVENT(ERRORID, SOURCE_ID, SOURCE_TABLE, FILTERID, [DATETIME], [ACTION])
SELECT NEXT VALUE FOR ERRORID_SEQ, CONVERT(NVARCHAR(50), Custid), 'CUSTBRIS', 7, (SELECT SYSDATETIME()), 'MODIFY'
FROM TPS.dbo.CUSTBRIS
WHERE Gender IS NULL OR UPPER(Gender) NOT IN ('M', 'F');

-- SELECT * FROM ERROREVENT WHERE FILTERID = 7;
-- SELECT * FROM TPS.dbo.CUSTBRIS 
-- WHERE Gender IS NULL OR UPPER(Gender) NOT IN ('M', 'F');

--/

-- Task 3.5.1 

-- ****** are the dwsourceIdBris and melb corrosponding to that customer id in each table??? ******

INSERT INTO DWCUST(DWSOURCEIDBRIS, DWSOURCEIDMELB, FIRSTNAME, SURNAME, GENDER, PHONE, POSTCODE, CITY, [STATE], CUSTCATNAME)
SELECT Custid, NULL, Fname, Sname,  UPPER(Gender), Phone, Postcode, City, [State], CUSTCATNAME
from DW1272.dbo.CUSTBRIS_JOIN;

SELECT * FROM DWCUST;

--/

-- Task 3.5.2

INSERT INTO DWCUST(DWSOURCEIDBRIS, DWSOURCEIDMELB, FIRSTNAME, SURNAME, GENDER, PHONE, POSTCODE, CITY, [STATE], CUSTCATNAME)
SELECT Custid, NULL, Fname, Sname,  UPPER(Gender), Phone, Postcode, City, [State], 'UNKNOWN'
FROM DW1272.dbo.FILTER_#4;

-- SELECT * FROM DWCUST WHERE CUSTCATNAME = 'UNKNOWN';
-- SELECT Custid, NULL, Fname, Sname,  UPPER(Gender), Phone, Postcode, City, [State], 'UNKNOWN'
-- FROM DW1272.dbo.FILTER_#4;

--/

--Task 3.5.3 
-- a) Write code to insert rows into the DWCUST table. 
-- Insert the rows from the table that are listed in the ERROREVENT table and have a filterid 
-- value =5. 
-- • In each case, remove all spaces or hyphens. 
-- • All GENDER values should be in uppercase. 

INSERT INTO DWCUST(DWSOURCEIDBRIS, DWSOURCEIDMELB, FIRSTNAME, SURNAME, GENDER, PHONE, POSTCODE, CITY, [STATE], CUSTCATNAME)
SELECT Custid, Custid, Fname, Sname,  UPPER(Gender), Phone, Postcode, City, [State], CUSTCATNAME
FROM DW1272.dbo.ERROREVENT
WHERE FILTERID = 5;

